// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Warehouse.Infrastructure;

#nullable disable

namespace Warehouse.Infrastructure.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20221023144233_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.Container", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InternalVolume")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Containers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Container");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Credential")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TargetDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.FreightContainer", b =>
                {
                    b.HasBaseType("Warehouse.Infrastructure.Entities.Container");

                    b.Property<bool>("IsHardTop")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpenSide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpenTop")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSoftTop")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("FreightContainer");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.IntermediateBulkContainer", b =>
                {
                    b.HasBaseType("Warehouse.Infrastructure.Entities.Container");

                    b.Property<bool>("IsFlexible")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRigid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVentilated")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("IntermediateBulkContainer");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.RefrigeratedContainer", b =>
                {
                    b.HasBaseType("Warehouse.Infrastructure.Entities.Container");

                    b.Property<int>("MaxTemperature")
                        .HasColumnType("int");

                    b.Property<int>("MinTemperature")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("RefrigeratedContainer");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.Container", b =>
                {
                    b.HasOne("Warehouse.Infrastructure.Entities.Contract", "Contract")
                        .WithMany("Containers")
                        .HasForeignKey("ContractId");

                    b.OwnsOne("Warehouse.Infrastructure.Entities.ExternalDimensions", "ExternalDimensions", b1 =>
                        {
                            b1.Property<int>("ContainerId")
                                .HasColumnType("int");

                            b1.Property<double>("Height")
                                .HasColumnType("float");

                            b1.Property<double>("Length")
                                .HasColumnType("float");

                            b1.Property<double>("Width")
                                .HasColumnType("float");

                            b1.HasKey("ContainerId");

                            b1.ToTable("Containers");

                            b1.WithOwner()
                                .HasForeignKey("ContainerId");
                        });

                    b.Navigation("Contract");

                    b.Navigation("ExternalDimensions")
                        .IsRequired();
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.Request", b =>
                {
                    b.HasOne("Warehouse.Infrastructure.Entities.Contract", "Contract")
                        .WithMany("Requests")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Warehouse.Infrastructure.Entities.Employee", "Employee")
                        .WithMany("Requests")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Contract");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.Contract", b =>
                {
                    b.Navigation("Containers");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Warehouse.Infrastructure.Entities.Employee", b =>
                {
                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
